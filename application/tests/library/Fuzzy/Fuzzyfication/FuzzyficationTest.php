<?php

namespace Fuzzy\Fuzzyfication;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-11-12 at 00:00:08.
 */
class FuzzyficationTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var Fuzzyfication
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Fuzzyfication('trapezoid');
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        $this->object = null;
    }
    
    public function testPertinenceObject()
    {
        $pertinence = $this->readAttribute($this->object, 'pertinence');
        $this->assertInstanceOf('Fuzzy\Fuzzyfication\Pertinence\Trapezoid', $pertinence);
    }
    
    public function testAddCollection()
    {
        $this->object->addCollection('Tamanho');
        $fuzzyCollection = $this->readAttribute($this->object, 'fuzzyCollection');
        $this->assertSame($fuzzyCollection, array('Tamanho' => array()));
    }
    
    /**
     * @dataProvider collectionAndGroupProvider
     */
    public function testAddGroup($collection, $group, $values)
    {
        $object = new Fuzzyfication('trapezoid');
        $object->addGroup($collection, $group, $values);
        $fuzzyCollection = $this->readAttribute($object, 'fuzzyCollection');
        
        $this->assertInternalType('array', $fuzzyCollection);
        
    }
    
    /**
     * @dataProvider collectionAndGroupProvider
     */
    public function testRun($type, $group, $values, $input, $pertinence)
    {
        $object = new Fuzzyfication($type);
        $object->addGroup('Tamanho', $group, $values);
        $object->run($input);
        
        $fuzzyCollection = $this->readAttribute($object, 'fuzzyCollection');
        $this->assertSame($fuzzyCollection['Tamanho'][$group]['pertinence'], $pertinence);
    }
    
    public function collectionAndGroupProvider()
    {
        return array(
            array(
                'trapezoid', 'medio', array(28,30,40,50,60), 34, 1
            ),
            array(
                'trapezoid', 'pequeno', array(10,20,30,35), 34, 0.2
            ),
            array(
                'trapezoid', 'grande', array(55,60,70,80,90,100), 34, 0
            )
        );
    }
}

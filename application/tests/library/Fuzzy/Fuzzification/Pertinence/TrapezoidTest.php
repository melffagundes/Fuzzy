<?php

namespace Fuzzy\Fuzzification\Pertinence;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-11-11 at 23:57:33.
 */
class TrapezoidTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var Trapezoid
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $values = array(1, 3, 6);
        
        $this->object = new Trapezoid;
        $this->object->setValues($values);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        $this->object = null;
    }
    
    public function testStartValue()
    {
        $start = $this->readAttribute($this->object, 'start');
        $this->assertSame($start, 1);
    }
    
    public function testEndValue()
    {
        $end = $this->readAttribute($this->object, 'end');
        $this->assertSame($end, 6);
    }
    
    /**
     * @covers Fuzzy\Fuzzification\Pertinence\Trapezoid::process
     * @dataProvider pertinenceProvider
     */
    public function testProcess($input, $pertinence)
    {
        $this->assertSame($this->object->process($input), $pertinence);
    }
    
    public function pertinenceProvider()
    {
        return array(
            array(1.9, 0.95),
            array(2.1, 1),
            array(3.2, 1),
            array(4, 1),
            array(5, 0.5),
            array(5.9, 0.05),
        );
    }
    
    /**
     * @covers Fuzzy\Fuzzification\Pertinence\Trapezoid::getSet
     * @dataProvider realExampleProvider
     * @param Array $range
     * @param int $pertinence
     * @param Array $values
     */
    public function testSetOutput($range, $pertinence, $values) 
    {
        $object = new Trapezoid;
        $object->setValues($range);
        
        $set = $object->getSet();
        $this->assertSame($set[$pertinence], $values);
    }
    
    public function realExampleProvider() 
    {
        return array(
        	array(array(5,20), "0.6", array(17, 8)),
            array(array(15,30), "0.2", array(29, 16))
        );
    }

}
